# Define a group of backend servers named 'backend'.
# This allows Nginx to load balance requests or simply forward them to the specified server.
# In this case, it points to a backend server running on 'backend' at port 5000.
upstream backend {
    server backend:5000;  # Replace 'backend' with the actual IP or hostname if necessary
}

# Server block to configure how Nginx should handle incoming requests.
server {
    # Define the ports on which this server block will listen for incoming requests.
    listen 80;     # Standard port for HTTP traffic
    listen 8000;   # Alternative port for HTTP traffic

    # Specify the server name (hostname) that this server block will respond to.
    # 'localhost' means this configuration will handle requests sent to 'localhost'.
    server_name localhost;

    # Location block to define how requests starting with /api should be handled.
    # This block is used to route requests that start with '/api' to the backend server.
    location /api {
        # Pass the incoming request to the backend server defined in the upstream block.
        # The request is forwarded to http://backend:5000.
        proxy_pass http://backend;

        # Set the 'Host' header to the value of the 'Host' header from the original request.
        # This helps the backend server identify the original host requested by the client.
        proxy_set_header Host $host;

        # Set the 'X-Real-IP' header to the IP address of the client making the request.
        # This allows the backend server to see the real IP address of the client.
        proxy_set_header X-Real-IP $remote_addr;

        # Set the 'X-Forwarded-For' header to include the original client's IP address.
        # This is useful for tracking the chain of proxies the request has passed through.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Set the 'X-Forwarded-Proto' header to the protocol used by the client (HTTP or HTTPS).
        # This informs the backend server about the original protocol used by the client.
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
