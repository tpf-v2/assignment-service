name: Integration tests
on: 
  workflow_call:
    secrets:
      CODECOV_TOKEN:
        description: 'token from codecov page' 
        required: true
      AZURE_STORAGE_CONNECTION_STRING:
        description: 'connection string from azure page' 
        required: true
      AZURE_STORAGE_CONTAINER_NAME:
        description: 'container name from azure page' 
        required: true

jobs:
  integration:
      runs-on: ubuntu-latest
      env:
        DATABASE_URL: "postgresql://postgres:postgres@localhost/postgres"
        ENVIRONMENT: "CI"
        AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
        AZURE_STORAGE_CONTAINER_NAME: ${{ secrets.AZURE_STORAGE_CONTAINER_NAME }}
      steps:
        - name: Setting up postgres database.
          uses: ikalnytskyi/action-setup-postgres@v6 
        - uses: actions/checkout@v4
        - name: Install Python 3.11
          uses: actions/setup-python@v5
          with:
            python-version: '3.11' 
        - name: Install poetry 
          uses: abatilo/actions-poetry@v2
        - uses: actions/cache@v4
          name: Define a cache for the virtual environment based on the dependencies lock file
          with:
            path: ./.venv
            key: venv-${{ hashFiles('poetry.lock') }}
        - name: Install the project dependencies
          run: poetry install
        - name: Run integrations tests
          run: poetry run pytest -m "integration" --strict-markers --cov=src tests/ --cov-report=xml
        - name: Upload coverage reports to Codecov
          uses: codecov/codecov-action@v4.0.1
          with:
            token: ${{ secrets.CODECOV_TOKEN }}
