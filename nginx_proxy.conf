# Define un grupo de servidores backend llamados 'backend'.
# Esto permite a Nginx balancear la carga de solicitudes o simplemente reenviarlas al servidor especificado.
# En este caso, se apunta a un servidor backend que está en 'backend' en el puerto 5000.
upstream backend {
    server backend:5000;  # Reemplaza 'backend' con la IP o nombre de host real si es necesario
}

# Bloque del servidor para configurar cómo Nginx debe manejar las solicitudes entrantes.
server {
    # Define los puertos en los que este bloque del servidor escuchará las solicitudes entrantes.
    listen 80;     # Puerto estándar para tráfico HTTP
    listen 8000;   # Puerto alternativo para tráfico HTTP

    # Especifica el nombre del servidor (nombre de host) al que este bloque del servidor responderá.
    # 'localhost' significa que esta configuración manejará solicitudes enviadas a 'localhost'.
    server_name localhost;

    # Bloque de ubicación para definir cómo se deben manejar las solicitudes que comienzan con /api.
    # Este bloque se usa para enrutar solicitudes que comienzan con '/api' al servidor backend.
    location /api {
        # Reenvia la solicitud entrante al servidor backend definido en el bloque upstream.
        # La solicitud se redirige a http://backend:5000.
        proxy_pass http://backend;

        # Establece el encabezado 'Host' al valor del encabezado 'Host' de la solicitud original.
        # Esto ayuda al servidor backend a identificar el host original solicitado por el cliente.
        proxy_set_header Host $host;

        # Establece el encabezado 'X-Real-IP' a la dirección IP del cliente que realiza la solicitud.
        # Esto permite al servidor backend ver la IP real del cliente.
        proxy_set_header X-Real-IP $remote_addr;

        # Establece el encabezado 'X-Forwarded-For' para incluir la dirección IP del cliente original.
        # Esto es útil para rastrear la cadena de proxies por los que ha pasado la solicitud.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        # Establece el encabezado 'X-Forwarded-Proto' al protocolo utilizado por el cliente (HTTP o HTTPS).
        # Esto informa al servidor backend sobre el protocolo original utilizado por el cliente.
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
