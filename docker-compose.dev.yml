services:

  # Nginx service
  nginx:
    image: nginx:1.25.2

    # Maps container ports to host ports.
    # Port 80 in the container is exposed on port 80 on the host.
    # Port 8000 in the container is exposed on port 8000 on the host.
    ports:
        - "80:80"
        - "8000:8000"
    # Mounts a configuration file from the host to the container.
    # The file './nginx_proxy.dev.conf' on the host is mounted to '/etc/nginx/conf.d/default.conf' in the container, in read-only mode.
    # /etc/nginx/conf.d/: This directory is used to store additional configuration files
    volumes:
        - ./nginx_proxy.dev.conf:/etc/nginx/conf.d/default.conf:ro

    # Connects this service to the network defined in the 'networks' section.
    networks:
      - assignment_network

    # Specifies dependencies for this service.
    # This container will wait for the 'backend' container to be ready before starting.
    depends_on:
      - backend
  
  # Backend service
  backend:
    # Builds the container image using the Dockerfile in the current directory.
    build: .

    # Maps port 5000 in the container to port 5000 on the host.
    ports:
      - "5000:5000"

    # Mounts the current directory on the host to '/app' in the container.
    # This allows changes in the host's source code to be reflected in the container
    volumes:
      - .:/app

    # Specifies dependencies for this service.
    # This container will wait for the 'db' container to be ready before starting.
    depends_on:
      - db

    # Defines environment variables for container configuration.
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - HOST=0.0.0.0
      - PORT=5000

    networks:
      - assignment_network
  dbinit:
    # Builds the container image using the Dockerfile in alembic_start
    build:
      context: .
      dockerfile: Dockerfile_dbinit

    # Mounts the current directory on the host to '/app' in the container.
    # This allows changes in the host's source code to be reflected in the container
    volumes:
      - .:/app

    # Specifies dependencies for this service.
    # This container will wait for the 'db' container to be ready before starting.
    depends_on:
      - db
    # Defines environment variables for container configuration.
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/postgres
      - HOST=0.0.0.0
      - PORT=5000

    networks:
      - assignment_network
  # PostgreSQL database service
  db:
    image: postgres:15

    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres

    ports:
      - "5433:5432"

    networks:
      - assignment_network

# Defines custom networks for the services to connect to.
networks:
  assignment_network:
    name: assignment_network
