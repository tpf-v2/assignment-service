"""add nulls and default values

Revision ID: 20183e7d0b0c
Revises: 3fd918400333
Create Date: 2024-11-04 21:03:20.394783

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "20183e7d0b0c"
down_revision: Union[str, None] = "3fd918400333"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "dates_slots", "period_id", existing_type=sa.VARCHAR(), nullable=True
    )

    op.alter_column("groups", "period_id", existing_type=sa.VARCHAR(), nullable=True)

    op.drop_constraint("groups_tutor_period_id_fkey", "groups", type_="foreignkey")
    op.create_foreign_key(
        None,
        "groups",
        "tutor_periods",
        ["tutor_period_id"],
        ["id"],
        ondelete="SET NULL",
    )

    op.drop_constraint(
        "groups_students_student_id_fkey", "groups_students", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "groups_students", "users", ["student_id"], ["id"], ondelete="CASCADE"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "groups_students", type_="foreignkey")
    op.create_foreign_key(
        "groups_students_student_id_fkey",
        "groups_students",
        "users",
        ["student_id"],
        ["id"],
    )

    op.drop_constraint(None, "groups", type_="foreignkey")
    op.create_foreign_key(
        "groups_tutor_period_id_fkey",
        "groups",
        "tutor_periods",
        ["tutor_period_id"],
        ["id"],
    )
    op.alter_column("groups", "period_id", existing_type=sa.VARCHAR(), nullable=False)

    op.alter_column(
        "dates_slots", "period_id", existing_type=sa.VARCHAR(), nullable=False
    )
    # ### end Alembic commands ###
